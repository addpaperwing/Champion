name: CI

on:
    push:
        branches:
            - main

jobs:
    unit-test:
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v4

            - name: setup JDK
              uses: actions/setup-java@v4
              with: 
                distribution: zulu
                java-version: 18

            - name: setup gradle cache
              uses: actions/cache@v3
              with: 
                path: |
                    ~/.gradle/caches
                    ~/.gradle/wrapper
                key: ${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}

            - name: make gradlew executable
              run: chmod +x ./gradlew

            # - name: run assembleDebug
            #   run: ./gradlew assembleDebug

            - name: run unit test
              run: ./gradlew lint testDebugUnitTest -P roborazzi.test.verify=true

            - name: Upload Reports
              uses: actions/upload-artifact@v4
              with:
                name: Test-Reports
                path: 'app/build/reports'
              if: always()

    instrument-test:
        runs-on: macOs-latest
        timeout-minutes: 30
        strategy:
            fail-fast: true
            matrix:
                api-level: [26, 29]
        steps:
            - uses: actions/checkout@v4

            - name: setup JDK
              uses: actions/setup-java@v4
              with: 
                distribution: zulu
                java-version: 18

            - name: Setup Gradle
              uses: gradle/gradle-build-action@v3

#            - name: Build projects before running emulator
#              run: ./gradlew packageDemoDebug packageDemoDebugAndroidTest

#            - name: setup gradle cache
#              uses: actions/cache@v2
#              with:
#                path: |
#                    ~/.gradle/caches
#                    ~/.gradle/wrapper
#                key: ${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}

            - name: make gradlew executable
              run: chmod +x ./gradlew

            # - name: Get AVD info
            #   uses: ./.github/actions/get-avd-info
            #   id: avd-info
            #   with:
            #     api-level: ${{ matrix.api-level }}

            - name: AVD cache
              uses: actions/cache@v3
              id: avd-cache
              with:
                path: |
                    ~/.android/avd/*
                    ~/.android/adb*
                key: avd-${{ matrix.api-level }}

            - name: create AVD and generate snapshot for caching
              if: steps.avd-cache.outputs.cache-hit != 'true'
              uses: reactivecircus/android-emulator-runner@v2
              with:
                api-level: ${{ matrix.api-level }}
                force-avd-creation: false
                emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
                disable-animations: false
                script: echo "Generated AVD snapshot for caching."

            - name: run tests
              uses: reactivecircus/android-emulator-runner@v2
              with:
                api-level: ${{ matrix.api-level }}
                force-avd-creation: false
                emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
                disable-animations: true
                script: ./gradlew connectedCheck

    androidTest:
         runs-on: ubuntu-latest
         timeout-minutes: 30
         strategy:
           matrix:
             api-level: [26, 30]

         steps:
           - name: Delete unnecessary tools ðŸ”§
             uses: jlumbroso/free-disk-space@v1.3.1
             with:
               android: false # Don't remove Android tools
               tool-cache: true # Remove image tool cache - rm -rf "$AGENT_TOOLSDIRECTORY"
               dotnet: true # rm -rf /usr/share/dotnet
               haskell: true # rm -rf /opt/ghc...
               swap-storage: true # rm -f /mnt/swapfile (4GiB)
               docker-images: false # Takes 16s, enable if needed in the future
               large-packages: false # includes google-cloud-sdk and it's slow

           - name: Enable KVM group perms
             run: |
               echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
               sudo udevadm control --reload-rules
               sudo udevadm trigger --name-match=kvm
               ls /dev/kvm

           - name: Checkout
             uses: actions/checkout@v4

#           - name: Copy CI gradle.properties
#             run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

           - name: Set up JDK 17
             uses: actions/setup-java@v4
             with:
               distribution: 'zulu'
               java-version: 17

           - name: Setup Gradle
             uses: gradle/gradle-build-action@v3

           - name: Build projects before running emulator
             run: ./gradlew packageDemoDebug packageDemoDebugAndroidTest

           - name: Run instrumentation tests
             uses: reactivecircus/android-emulator-runner@v2
             with:
               api-level: ${{ matrix.api-level }}
               arch: x86_64
               disable-animations: true
               disk-size: 6000M
               heap-size: 600M
               script: ./gradlew connectedDemoDebugAndroidTest --daemon

           - name: Upload test reports
             if: always()
             uses: actions/upload-artifact@v4
             with:
               name: test-reports-${{ matrix.api-level }}
               path: '**/build/reports/androidTests'