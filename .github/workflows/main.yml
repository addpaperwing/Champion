name: CI

on:
    push:
        branches:
            - main

jobs:
    unit-test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: setup JDK
              uses: actions/setup-java@v4
              with: 
                distribution: zulu
                java-version: 18

            - name: setup gradle cache
              uses: actions/cache@v2
              with: 
                path: |
                    ~/.gradle/caches
                    ~/.gradle/wrapper
                key: ${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}

            - name: make gradlew executable
              run: chmod +x ./gradlew

            # - name: run assembleDebug
            #   run: ./gradlew assembleDebug

            - name: run unit test
              run: ./gradlew lint testDebugUnitTest -P roborazzi.test.verify=true

            - name: Upload Reports
              uses: actions/upload-artifact@v3
              with:
                name: Test-Reports
                path: app/build/reports
              if: always()

            - name: Upload screenshots
              uses: actions/upload-artifact@v3
              with:
                name: screenshots
                path: app/build/outputs/roborazzi
                retention-days: 30

    instrumentation-test:
        runs-on: macOs-latest
        strategy:
            fail-fast: true
            matrix:
                api-level: [26, 30]
        steps:
            - uses: actions/checkout@v4

            - name: setup JDK
              uses: actions/setup-java@v4
              with: 
                distribution: zulu
                java-version: 18

            - name: setup gradle cache
              uses: actions/cache@v2
              with: 
                path: |
                    ~/.gradle/caches
                    ~/.gradle/wrapper
                key: ${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}

            - name: make gradlew executable
              run: chmod +x ./gradlew
            
            # - name: Get AVD info
            #   uses: ./.github/actions/get-avd-info
            #   id: avd-info
            #   with:
            #     api-level: ${{ matrix.api-level }}
  
            - name: AVD cache
              uses: actions/cache@v3
              id: avd-cache
              with:
                path: |
                    ~/.android/avd/*
                    ~/.android/adb*
                key: avd-${{ matrix.api-level }}
        
            - name: create AVD and generate snapshot for caching
              if: steps.avd-cache.outputs.cache-hit != 'true'
              uses: reactivecircus/android-emulator-runner@v2
              with:
                api-level: ${{ matrix.api-level }}
                force-avd-creation: false
                emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
                disable-animations: false
                script: echo "Generated AVD snapshot for caching."
        
            - name: run tests
              uses: reactivecircus/android-emulator-runner@v2
              with:
                api-level: ${{ matrix.api-level }}
                force-avd-creation: false
                emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
                disable-animations: true
                script: ./gradlew connectedCheck
  
            
                




