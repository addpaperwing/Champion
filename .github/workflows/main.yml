name: CI

on:
    push:
        branches:
            - main

jobs:
    unit-test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: setup JDK
              uses: actions/setup-java@v3
              with: 
                distribution: zulu
                java-version: 18

            # - name: setup Android SDK
            #   uses: android-action/setup-android@v2

            - name: setup gradle cache
              uses: actions/cache@v2
              with: 
                path: |
                    ~/.gradle/caches
                    ~/.gradle/wrapper
                key: ${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}

            - name: make gradlew executable
              run: chmod +x ./gradlew

            - name: run assembleDebug
              run: ./gradlew assembleDebug

            - name: run unit test
              run: ./gradlew testDebugUnitTest

    # ui-test:
    #     runs-on: macOs-latest
    #     strategy:
    #         fail-fast: true
    #         matrix:
    #             api-level: [22, 26, 29]
    #     steps:
    #         - uses: actions/checkout@v3
    #         - uses: actions/setup-java@v3
    #           with: 
    #             java-version: 18

    #         - name: Gradle cache
    #           uses: gradle/gradle-build-action@v2
            
    #         - name: Get AVD info
    #           uses: ./.github/actions/get-avd-info
    #           id: avd-info
    #           with:
    #             api-level: ${{ matrix.api-level }}
  
    #         - name: AVD cache
    #           uses: actions/cache@v3
    #           id: avd-cache
    #           with:
    #             path: |
    #                 ~/.android/avd/*
    #                 ~/.android/adb*
    #             key: avd-${{ matrix.api-level }}
        
    #         - name: create AVD and generate snapshot for caching
    #           if: steps.avd-cache.outputs.cache-hit != 'true'
    #           uses: reactivecircus/android-emulator-runner@v2
    #           with:
    #             api-level: ${{ matrix.api-level }}
    #             force-avd-creation: false
    #             emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
    #             disable-animations: false
    #             script: echo "Generated AVD snapshot for caching."
        
    #         - name: run tests
    #           uses: reactivecircus/android-emulator-runner@v2
    #           with:
    #             api-level: ${{ matrix.api-level }}
    #             force-avd-creation: false
    #             emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
    #             disable-animations: true
    #             script: ./gradlew connectedCheck
  
            
                




